
@model IEnumerable<NoteMarketPlace.Models.NoteDetailsViewModel>
@{
    int i = 0;

    Layout = "~/Views/Shared/_RegisteredAdmin.cshtml";

}
@using NoteMarketPlace.Models;

<div class="member-title-wrapper">
    <div class="container">
        <div class="dashboard-title-section">
            <div class="row">
                <div class="col-md-5">
                    <h1>Members</h1>
                </div>
                @using (Html.BeginForm("member", "Admin", FormMethod.Post))
                {
                    <div class="row">
                        <div class="col-md-6" id="search-box">
                            <img src="~/Content/images/search-icon.png" id="search-img">
                            <input type="search" class="form-control" id="book-search" placeholder="    Search" value="@ViewData["GetAdminDashboardData"]" name="searchstring">
                        </div>
                        <div class="col-md-6">
                            <button type="submit" class="btn btn-primary" id="search-tab-button">Search</button>
                        </div>
                    </div>
                }

               
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div class="admin-dashboard">
        <table class="table" id="member-table">
            
            <thead>
                <tr>
                    <th scope="col">SR NO.</th>
                    <th scope="col">
                        @Html.ActionLink("FIRST NAME", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "FIRST NAME", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })
                    </th>
                    <th scope="col">
                        @Html.ActionLink("LAST NAME", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "LAST NAME", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })
                    </th>
                    <th scope="col">
                        @Html.ActionLink("EMAIL", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "EMAIL", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })
                    </th>
                    <th scope="col">
                        @Html.ActionLink("JOINING DATE", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "JOINING DATE", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })
                    </th>
                    <th scope="col">
                        <a href="/Admin/NotesUnderReview">
                            UNDER REVIEW NOTES
                        </a>
                    </th>
                    <th scope="col">
                        <a href="/Admin/PublishedNote">
                            PUBLISHED NOTES
                        </a>
                    </th>
                    <th scope="col">
                        <a href="/Admin/DonwloadedNotes">
                            DOWNLOADED NOTES
                        </a>
                    </th>
                    <th scope="col">
                        @Html.ActionLink("TOTAL EXPENSES", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "TOTAL EXPENSES", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })
                    </th>
                    <th colspan="2">
                        @Html.ActionLink("TOTAL EARNING", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : (ViewBag.SortOrder == "Asc" ? "Desc" : "Asc"), SortBy = "TOTAL EARNING", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber })
                    </th>


                </tr>
            </thead>

            <tbody>
                @foreach (NoteMarketPlace.Models.NoteDetailsViewModel item in (IEnumerable<NoteMarketPlace.Models.NoteDetailsViewModel>)Model)
                {
                    <tr>
                        <th scope="row">@(i = i+ 1)</th>
                        <td>@item.user.FirstName</td>
                        <td>@item.user.LastName</td>
                        <td>@item.user.EmailID</td>
                        <td>@item.user.CreatedDate</td>
                        @{
                            NoteMarketEntities db = new NoteMarketEntities();

                            var underReviewNotes = db.Notes.Where(m => m.Status == 8 || m.Status == 9).Where(m => m.SellerID == item.user.ID).Count();

                            var publishedNotes = db.Notes.Where(m => m.Status == 10).Where(m => m.SellerID == item.user.ID).Count();

                            var downloadNotes = db.Downloads.Where(m => m.IsAttachmentDownloaded == true).Where(m => m.BuyerID == item.user.ID).Count();

                            var totaldownloadNotes = db.Downloads.Where(m => m.IsAttachmentDownloaded == true && m.BuyerID == item.user.ID);

                            int totalExpenss = 0;

                            if (totaldownloadNotes != null)
                            {
                                var x = totaldownloadNotes.Count();
                                if (x != 0)
                                {
                                    foreach (var p in totaldownloadNotes)
                                    {
                                        totalExpenss = totalExpenss + Convert.ToInt32(p.PurchasedPrice);
                                    }


                                }
                            }
                            var totalsoldNotes = db.Downloads.Where(m => m.IsAttachmentDownloaded == true && m.SellerID == item.user.ID);

                            int totalEarning = 0;

                            if (totalsoldNotes != null)
                            {
                                var x = totalsoldNotes.Count();
                                if (x != 0)
                                {
                                    foreach (var p in totalsoldNotes)
                                    {
                                        totalEarning = totalEarning + Convert.ToInt32(p.PurchasedPrice);
                                    }


                                }
                            }
                        }



                        <td>@underReviewNotes</td>
                        <td>@publishedNotes</td>
                        <td>@downloadNotes</td>
                        <td>
                            &#36;
                            @totalExpenss
                        </td>
                        <td>
                            &#36;
                            @totalEarning
                        </td>
                        <td>
                            <div>
                                <div class="dropdown">
                                    <button class="dropbtn">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                                            <path d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                                        </svg>
                                    </button>

                                    <div class="dropdown-content">
                                        <a href="/Admin/memberDetails?userID=@item.user.ID">View More Details</a>

                                        <a href="/Admin/member?userDeactivateID=@item.user.ID"
                                           onclick="return confirm('Are you sure you want to make this member inactive?')">
                                            Deactivate
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="in-progress-nav">
        <nav aria-label="Page navigation example">
            @{
                Double totalPages = ViewBag.TotalPages;
                <ul class="pagination justify-content-center">
                    @if (ViewBag.PageNumber == 1)
                    {
                        <li class="page-item ">
                            @Html.ActionLink("<", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "FIRST NAME" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber }, new { @class = "page-link" })

                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            @Html.ActionLink("<", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "FIRST NAME" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber - 1 }, new { @class = "page-link" })

                        </li>
                    }

                    @for (int j = 1; j <= totalPages; j++)
                    {

                        if (j == ViewBag.PageNumber)
                        {
                            <li class="active page-item">
                                @Html.ActionLink(j.ToString(), "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "FIRST NAME" : ViewBag.SortBy, PageNumber = j }, new { @class = "page-link" })
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                @Html.ActionLink(j.ToString(), "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "FIRST NAME" : ViewBag.SortBy, PageNumber = j }, new { @class = "page-link" })
                            </li>
                        }




                    }
                    @if (ViewBag.PageNumber == totalPages)
                    {
                        <li class="page-item">
                            @Html.ActionLink(">", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "FIRST NAME" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber }, new { @class = "page-link" })

                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            @Html.ActionLink(">", "member", new { SortOrder = ViewBag.SortOrder == null ? "Asc" : ViewBag.SortOrder, SortBy = ViewBag.SortBy == null ? "FIRST NAME" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber + 1 }, new { @class = "page-link" })

                        </li>
                    }

                </ul>
            }
        </nav>
    </div>
</div>

